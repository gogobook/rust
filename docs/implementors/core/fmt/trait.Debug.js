(function() {var implementors = {};
implementors["core"] = [];
implementors["proc_macro"] = [{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Level.html\" title=\"enum proc_macro::Level\">Level</a>",synthetic:false,types:["proc_macro::diagnostic::Level"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Diagnostic.html\" title=\"struct proc_macro::Diagnostic\">Diagnostic</a>",synthetic:false,types:["proc_macro::diagnostic::Diagnostic"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.LexError.html\" title=\"struct proc_macro::LexError\">LexError</a>",synthetic:false,types:["proc_macro::LexError"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>",synthetic:false,types:["proc_macro::TokenStream"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Span.html\" title=\"struct proc_macro::Span\">Span</a>",synthetic:false,types:["proc_macro::Span"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.LineColumn.html\" title=\"struct proc_macro::LineColumn\">LineColumn</a>",synthetic:false,types:["proc_macro::LineColumn"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.SourceFile.html\" title=\"struct proc_macro::SourceFile\">SourceFile</a>",synthetic:false,types:["proc_macro::SourceFile"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.TokenTree.html\" title=\"enum proc_macro::TokenTree\">TokenTree</a>",synthetic:false,types:["proc_macro::TokenTree"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Delimiter.html\" title=\"enum proc_macro::Delimiter\">Delimiter</a>",synthetic:false,types:["proc_macro::Delimiter"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Group.html\" title=\"struct proc_macro::Group\">Group</a>",synthetic:false,types:["proc_macro::Group"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"proc_macro/enum.Spacing.html\" title=\"enum proc_macro::Spacing\">Spacing</a>",synthetic:false,types:["proc_macro::Spacing"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Punct.html\" title=\"struct proc_macro::Punct\">Punct</a>",synthetic:false,types:["proc_macro::Punct"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Ident.html\" title=\"struct proc_macro::Ident\">Ident</a>",synthetic:false,types:["proc_macro::Ident"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"proc_macro/struct.Literal.html\" title=\"struct proc_macro::Literal\">Literal</a>",synthetic:false,types:["proc_macro::Literal"]},];
implementors["test"] = [{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.Concurrent.html\" title=\"enum test::Concurrent\">Concurrent</a>",synthetic:false,types:["test::Concurrent"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.TestName.html\" title=\"enum test::TestName\">TestName</a>",synthetic:false,types:["test::TestName"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.NamePadding.html\" title=\"enum test::NamePadding\">NamePadding</a>",synthetic:false,types:["test::NamePadding"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.TestFn.html\" title=\"enum test::TestFn\">TestFn</a>",synthetic:false,types:["test::TestFn"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.ShouldPanic.html\" title=\"enum test::ShouldPanic\">ShouldPanic</a>",synthetic:false,types:["test::ShouldPanic"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"test/struct.TestDesc.html\" title=\"struct test::TestDesc\">TestDesc</a>",synthetic:false,types:["test::TestDesc"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"test/struct.TestDescAndFn.html\" title=\"struct test::TestDescAndFn\">TestDescAndFn</a>",synthetic:false,types:["test::TestDescAndFn"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"test/struct.Metric.html\" title=\"struct test::Metric\">Metric</a>",synthetic:false,types:["test::Metric"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"test/struct.Options.html\" title=\"struct test::Options\">Options</a>",synthetic:false,types:["test::Options"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.ColorConfig.html\" title=\"enum test::ColorConfig\">ColorConfig</a>",synthetic:false,types:["test::ColorConfig"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.OutputFormat.html\" title=\"enum test::OutputFormat\">OutputFormat</a>",synthetic:false,types:["test::OutputFormat"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"test/enum.RunIgnored.html\" title=\"enum test::RunIgnored\">RunIgnored</a>",synthetic:false,types:["test::RunIgnored"]},{text:"impl <a class=\"trait\" href=\"core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"test/struct.TestOpts.html\" title=\"struct test::TestOpts\">TestOpts</a>",synthetic:false,types:["test::TestOpts"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()