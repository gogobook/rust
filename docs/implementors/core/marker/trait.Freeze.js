(function() {var implementors = {};
implementors["alloc"] = [{text:"impl Freeze for <a class=\"struct\" href=\"alloc/alloc/struct.Global.html\" title=\"struct alloc::alloc::Global\">Global</a>",synthetic:true,types:["alloc::alloc::Global"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;T&gt;",synthetic:true,types:["alloc::boxed::Box"]},{text:"impl Freeze for <a class=\"enum\" href=\"alloc/collections/enum.TryReserveError.html\" title=\"enum alloc::collections::TryReserveError\">TryReserveError</a>",synthetic:true,types:["alloc::collections::TryReserveError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.BinaryHeap.html\" title=\"struct alloc::collections::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::binary_heap::BinaryHeap"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.PeekMut.html\" title=\"struct alloc::collections::binary_heap::PeekMut\">PeekMut</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::binary_heap::PeekMut"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.Iter.html\" title=\"struct alloc::collections::binary_heap::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::binary_heap::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.IntoIter.html\" title=\"struct alloc::collections::binary_heap::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::binary_heap::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/binary_heap/struct.Drain.html\" title=\"struct alloc::collections::binary_heap::Drain\">Drain</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::binary_heap::Drain"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree_map::BTreeMap\">BTreeMap</a>&lt;K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::BTreeMap"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Iter.html\" title=\"struct alloc::collections::btree_map::Iter\">Iter</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.IterMut.html\" title=\"struct alloc::collections::btree_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::IterMut"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.IntoIter.html\" title=\"struct alloc::collections::btree_map::IntoIter\">IntoIter</a>&lt;K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::IntoIter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Keys.html\" title=\"struct alloc::collections::btree_map::Keys\">Keys</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::Keys"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Values.html\" title=\"struct alloc::collections::btree_map::Values\">Values</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::Values"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.ValuesMut.html\" title=\"struct alloc::collections::btree_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::ValuesMut"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.Range.html\" title=\"struct alloc::collections::btree_map::Range\">Range</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::Range"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.RangeMut.html\" title=\"struct alloc::collections::btree_map::RangeMut\">RangeMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::RangeMut"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.VacantEntry.html\" title=\"struct alloc::collections::btree_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::collections::btree::map::VacantEntry"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_map/struct.OccupiedEntry.html\" title=\"struct alloc::collections::btree_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt;",synthetic:true,types:["alloc::collections::btree::map::OccupiedEntry"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"alloc/collections/btree_map/enum.Entry.html\" title=\"enum alloc::collections::btree_map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::collections::btree::map::Entry"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree_set::BTreeSet\">BTreeSet</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::btree::set::BTreeSet"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Iter.html\" title=\"struct alloc::collections::btree_set::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::Iter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.IntoIter.html\" title=\"struct alloc::collections::btree_set::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::btree::set::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Range.html\" title=\"struct alloc::collections::btree_set::Range\">Range</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::Range"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Difference.html\" title=\"struct alloc::collections::btree_set::Difference\">Difference</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::Difference"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.SymmetricDifference.html\" title=\"struct alloc::collections::btree_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::SymmetricDifference"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Intersection.html\" title=\"struct alloc::collections::btree_set::Intersection\">Intersection</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::Intersection"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/btree_set/struct.Union.html\" title=\"struct alloc::collections::btree_set::Union\">Union</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::btree::set::Union"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.LinkedList.html\" title=\"struct alloc::collections::linked_list::LinkedList\">LinkedList</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::linked_list::LinkedList"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.Iter.html\" title=\"struct alloc::collections::linked_list::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::linked_list::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.IterMut.html\" title=\"struct alloc::collections::linked_list::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::linked_list::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.IntoIter.html\" title=\"struct alloc::collections::linked_list::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::linked_list::IntoIter"]},{text:"impl&lt;'a, T, F&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/linked_list/struct.DrainFilter.html\" title=\"struct alloc::collections::linked_list::DrainFilter\">DrainFilter</a>&lt;'a, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::collections::linked_list::DrainFilter"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.VecDeque.html\" title=\"struct alloc::collections::vec_deque::VecDeque\">VecDeque</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::vec_deque::VecDeque"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.Iter.html\" title=\"struct alloc::collections::vec_deque::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::vec_deque::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.IterMut.html\" title=\"struct alloc::collections::vec_deque::IterMut\">IterMut</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::vec_deque::IterMut"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.IntoIter.html\" title=\"struct alloc::collections::vec_deque::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["alloc::collections::vec_deque::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/collections/vec_deque/struct.Drain.html\" title=\"struct alloc::collections::vec_deque::Drain\">Drain</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::collections::vec_deque::Drain"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;T&gt;",synthetic:true,types:["alloc::sync::Arc"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc/sync/struct.Weak.html\" title=\"struct alloc::sync::Weak\">Weak</a>&lt;T&gt;",synthetic:true,types:["alloc::sync::Weak"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc/rc/struct.Rc.html\" title=\"struct alloc::rc::Rc\">Rc</a>&lt;T&gt;",synthetic:true,types:["alloc::rc::Rc"]},{text:"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"alloc/rc/struct.Weak.html\" title=\"struct alloc::rc::Weak\">Weak</a>&lt;T&gt;",synthetic:true,types:["alloc::rc::Weak"]},{text:"impl&lt;'a, B:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"enum\" href=\"alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'a, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;B as <a class=\"trait\" href=\"alloc/borrow/trait.ToOwned.html\" title=\"trait alloc::borrow::ToOwned\">ToOwned</a>&gt;::<a class=\"type\" href=\"alloc/borrow/trait.ToOwned.html#associatedtype.Owned\" title=\"type alloc::borrow::ToOwned::Owned\">Owned</a>: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::borrow::Cow"]},{text:"impl Freeze for <a class=\"struct\" href=\"alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:true,types:["alloc::string::String"]},{text:"impl Freeze for <a class=\"struct\" href=\"alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>",synthetic:true,types:["alloc::string::FromUtf8Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"alloc/string/struct.FromUtf16Error.html\" title=\"struct alloc::string::FromUtf16Error\">FromUtf16Error</a>",synthetic:true,types:["alloc::string::FromUtf16Error"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"alloc/string/struct.Drain.html\" title=\"struct alloc::string::Drain\">Drain</a>&lt;'a&gt;",synthetic:true,types:["alloc::string::Drain"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;",synthetic:true,types:["alloc::vec::Vec"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.IntoIter.html\" title=\"struct alloc::vec::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["alloc::vec::IntoIter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.Drain.html\" title=\"struct alloc::vec::Drain\">Drain</a>&lt;'a, T&gt;",synthetic:true,types:["alloc::vec::Drain"]},{text:"impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.Splice.html\" title=\"struct alloc::vec::Splice\">Splice</a>&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::vec::Splice"]},{text:"impl&lt;'a, T, F&gt; Freeze for <a class=\"struct\" href=\"alloc/vec/struct.DrainFilter.html\" title=\"struct alloc::vec::DrainFilter\">DrainFilter</a>&lt;'a, T, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>",synthetic:true,types:["alloc::vec::DrainFilter"]},];
implementors["proc_macro"] = [{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Diagnostic.html\" title=\"struct proc_macro::Diagnostic\">Diagnostic</a>",synthetic:true,types:["proc_macro::diagnostic::Diagnostic"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.TokenStream.html\" title=\"struct proc_macro::TokenStream\">TokenStream</a>",synthetic:true,types:["proc_macro::TokenStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.LexError.html\" title=\"struct proc_macro::LexError\">LexError</a>",synthetic:true,types:["proc_macro::LexError"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Span.html\" title=\"struct proc_macro::Span\">Span</a>",synthetic:true,types:["proc_macro::Span"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.LineColumn.html\" title=\"struct proc_macro::LineColumn\">LineColumn</a>",synthetic:true,types:["proc_macro::LineColumn"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.SourceFile.html\" title=\"struct proc_macro::SourceFile\">SourceFile</a>",synthetic:true,types:["proc_macro::SourceFile"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Group.html\" title=\"struct proc_macro::Group\">Group</a>",synthetic:true,types:["proc_macro::Group"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Punct.html\" title=\"struct proc_macro::Punct\">Punct</a>",synthetic:true,types:["proc_macro::Punct"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Ident.html\" title=\"struct proc_macro::Ident\">Ident</a>",synthetic:true,types:["proc_macro::Ident"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/struct.Literal.html\" title=\"struct proc_macro::Literal\">Literal</a>",synthetic:true,types:["proc_macro::Literal"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro/enum.Level.html\" title=\"enum proc_macro::Level\">Level</a>",synthetic:true,types:["proc_macro::diagnostic::Level"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro/enum.TokenTree.html\" title=\"enum proc_macro::TokenTree\">TokenTree</a>",synthetic:true,types:["proc_macro::TokenTree"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro/enum.Delimiter.html\" title=\"enum proc_macro::Delimiter\">Delimiter</a>",synthetic:true,types:["proc_macro::Delimiter"]},{text:"impl Freeze for <a class=\"enum\" href=\"proc_macro/enum.Spacing.html\" title=\"enum proc_macro::Spacing\">Spacing</a>",synthetic:true,types:["proc_macro::Spacing"]},{text:"impl Freeze for <a class=\"struct\" href=\"proc_macro/token_stream/struct.IntoIter.html\" title=\"struct proc_macro::token_stream::IntoIter\">IntoIter</a>",synthetic:true,types:["proc_macro::token_stream::IntoIter"]},];
implementors["std"] = [{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/thread/struct.LocalKey.html\" title=\"struct std::thread::LocalKey\">LocalKey</a>&lt;T&gt;",synthetic:true,types:["std::thread::local::LocalKey"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/thread/struct.AccessError.html\" title=\"struct std::thread::AccessError\">AccessError</a>",synthetic:true,types:["std::thread::local::AccessError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/thread/struct.Builder.html\" title=\"struct std::thread::Builder\">Builder</a>",synthetic:true,types:["std::thread::Builder"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/thread/struct.ThreadId.html\" title=\"struct std::thread::ThreadId\">ThreadId</a>",synthetic:true,types:["std::thread::ThreadId"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/thread/struct.Thread.html\" title=\"struct std::thread::Thread\">Thread</a>",synthetic:true,types:["std::thread::Thread"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/thread/struct.JoinHandle.html\" title=\"struct std::thread::JoinHandle\">JoinHandle</a>&lt;T&gt;",synthetic:true,types:["std::thread::JoinHandle"]},{text:"impl !Freeze for <a class=\"struct\" href=\"std/backtrace/struct.Backtrace.html\" title=\"struct std::backtrace::Backtrace\">Backtrace</a>",synthetic:true,types:["std::backtrace::Backtrace"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/backtrace/enum.BacktraceStatus.html\" title=\"enum std::backtrace::BacktraceStatus\">BacktraceStatus</a>",synthetic:true,types:["std::backtrace::BacktraceStatus"]},{text:"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/struct.HashMap.html\" title=\"struct std::collections::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["std::collections::hash::map::HashMap"]},{text:"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/struct.HashSet.html\" title=\"struct std::collections::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>",synthetic:true,types:["std::collections::hash::set::HashSet"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.Iter.html\" title=\"struct std::collections::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::Iter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.IterMut.html\" title=\"struct std::collections::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::IterMut"]},{text:"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.IntoIter.html\" title=\"struct std::collections::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;",synthetic:true,types:["std::collections::hash::map::IntoIter"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.Keys.html\" title=\"struct std::collections::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::Keys"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.Values.html\" title=\"struct std::collections::hash_map::Values\">Values</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::Values"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.Drain.html\" title=\"struct std::collections::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::Drain"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.ValuesMut.html\" title=\"struct std::collections::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::ValuesMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct std::collections::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["std::collections::hash::map::RawEntryBuilderMut"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct std::collections::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V&gt;",synthetic:true,types:["std::collections::hash::map::RawOccupiedEntryMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.RawVacantEntryMut.html\" title=\"struct std::collections::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["std::collections::hash::map::RawVacantEntryMut"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.RawEntryBuilder.html\" title=\"struct std::collections::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["std::collections::hash::map::RawEntryBuilder"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.OccupiedEntry.html\" title=\"struct std::collections::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["std::collections::hash::map::OccupiedEntry"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.VacantEntry.html\" title=\"struct std::collections::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["std::collections::hash::map::VacantEntry"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.RandomState.html\" title=\"struct std::collections::hash_map::RandomState\">RandomState</a>",synthetic:true,types:["std::collections::hash::map::RandomState"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/collections/hash_map/struct.DefaultHasher.html\" title=\"struct std::collections::hash_map::DefaultHasher\">DefaultHasher</a>",synthetic:true,types:["std::collections::hash::map::DefaultHasher"]},{text:"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"std/collections/hash_map/enum.RawEntryMut.html\" title=\"enum std::collections::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;",synthetic:true,types:["std::collections::hash::map::RawEntryMut"]},{text:"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"std/collections/hash_map/enum.Entry.html\" title=\"enum std::collections::hash_map::Entry\">Entry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>",synthetic:true,types:["std::collections::hash::map::Entry"]},{text:"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.Iter.html\" title=\"struct std::collections::hash_set::Iter\">Iter</a>&lt;'a, K&gt;",synthetic:true,types:["std::collections::hash::set::Iter"]},{text:"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.IntoIter.html\" title=\"struct std::collections::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;",synthetic:true,types:["std::collections::hash::set::IntoIter"]},{text:"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.Drain.html\" title=\"struct std::collections::hash_set::Drain\">Drain</a>&lt;'a, K&gt;",synthetic:true,types:["std::collections::hash::set::Drain"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.Intersection.html\" title=\"struct std::collections::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;",synthetic:true,types:["std::collections::hash::set::Intersection"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.Difference.html\" title=\"struct std::collections::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;",synthetic:true,types:["std::collections::hash::set::Difference"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.SymmetricDifference.html\" title=\"struct std::collections::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;",synthetic:true,types:["std::collections::hash::set::SymmetricDifference"]},{text:"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"std/collections/hash_set/struct.Union.html\" title=\"struct std::collections::hash_set::Union\">Union</a>&lt;'a, T, S&gt;",synthetic:true,types:["std::collections::hash::set::Union"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/env/struct.Vars.html\" title=\"struct std::env::Vars\">Vars</a>",synthetic:true,types:["std::env::Vars"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/env/struct.VarsOs.html\" title=\"struct std::env::VarsOs\">VarsOs</a>",synthetic:true,types:["std::env::VarsOs"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/env/struct.SplitPaths.html\" title=\"struct std::env::SplitPaths\">SplitPaths</a>&lt;'a&gt;",synthetic:true,types:["std::env::SplitPaths"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/env/struct.JoinPathsError.html\" title=\"struct std::env::JoinPathsError\">JoinPathsError</a>",synthetic:true,types:["std::env::JoinPathsError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/env/struct.Args.html\" title=\"struct std::env::Args\">Args</a>",synthetic:true,types:["std::env::Args"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/env/struct.ArgsOs.html\" title=\"struct std::env::ArgsOs\">ArgsOs</a>",synthetic:true,types:["std::env::ArgsOs"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/env/enum.VarError.html\" title=\"enum std::env::VarError\">VarError</a>",synthetic:true,types:["std::env::VarError"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/error/struct.ErrorIter.html\" title=\"struct std::error::ErrorIter\">ErrorIter</a>&lt;'a&gt;",synthetic:true,types:["std::error::ErrorIter"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.CString.html\" title=\"struct std::ffi::CString\">CString</a>",synthetic:true,types:["std::ffi::c_str::CString"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.CStr.html\" title=\"struct std::ffi::CStr\">CStr</a>",synthetic:true,types:["std::ffi::c_str::CStr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.NulError.html\" title=\"struct std::ffi::NulError\">NulError</a>",synthetic:true,types:["std::ffi::c_str::NulError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.IntoStringError.html\" title=\"struct std::ffi::IntoStringError\">IntoStringError</a>",synthetic:true,types:["std::ffi::c_str::IntoStringError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.FromBytesWithNulError.html\" title=\"struct std::ffi::FromBytesWithNulError\">FromBytesWithNulError</a>",synthetic:true,types:["std::ffi::c_str::FromBytesWithNulError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.OsString.html\" title=\"struct std::ffi::OsString\">OsString</a>",synthetic:true,types:["std::ffi::os_str::OsString"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/ffi/struct.OsStr.html\" title=\"struct std::ffi::OsStr\">OsStr</a>",synthetic:true,types:["std::ffi::os_str::OsStr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.File.html\" title=\"struct std::fs::File\">File</a>",synthetic:true,types:["std::fs::File"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.Metadata.html\" title=\"struct std::fs::Metadata\">Metadata</a>",synthetic:true,types:["std::fs::Metadata"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.ReadDir.html\" title=\"struct std::fs::ReadDir\">ReadDir</a>",synthetic:true,types:["std::fs::ReadDir"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.DirEntry.html\" title=\"struct std::fs::DirEntry\">DirEntry</a>",synthetic:true,types:["std::fs::DirEntry"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.OpenOptions.html\" title=\"struct std::fs::OpenOptions\">OpenOptions</a>",synthetic:true,types:["std::fs::OpenOptions"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.Permissions.html\" title=\"struct std::fs::Permissions\">Permissions</a>",synthetic:true,types:["std::fs::Permissions"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.FileType.html\" title=\"struct std::fs::FileType\">FileType</a>",synthetic:true,types:["std::fs::FileType"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/fs/struct.DirBuilder.html\" title=\"struct std::fs::DirBuilder\">DirBuilder</a>",synthetic:true,types:["std::fs::DirBuilder"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.BufReader.html\" title=\"struct std::io::BufReader\">BufReader</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::buffered::BufReader"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.BufWriter.html\" title=\"struct std::io::BufWriter\">BufWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::buffered::BufWriter"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.LineWriter.html\" title=\"struct std::io::LineWriter\">LineWriter</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::buffered::LineWriter"]},{text:"impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.IntoInnerError.html\" title=\"struct std::io::IntoInnerError\">IntoInnerError</a>&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::buffered::IntoInnerError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Cursor.html\" title=\"struct std::io::Cursor\">Cursor</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::cursor::Cursor"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Error.html\" title=\"struct std::io::Error\">Error</a>",synthetic:true,types:["std::io::error::Error"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Sink.html\" title=\"struct std::io::Sink\">Sink</a>",synthetic:true,types:["std::io::util::Sink"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Empty.html\" title=\"struct std::io::Empty\">Empty</a>",synthetic:true,types:["std::io::util::Empty"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Repeat.html\" title=\"struct std::io::Repeat\">Repeat</a>",synthetic:true,types:["std::io::util::Repeat"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Stdin.html\" title=\"struct std::io::Stdin\">Stdin</a>",synthetic:true,types:["std::io::stdio::Stdin"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Stdout.html\" title=\"struct std::io::Stdout\">Stdout</a>",synthetic:true,types:["std::io::stdio::Stdout"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Stderr.html\" title=\"struct std::io::Stderr\">Stderr</a>",synthetic:true,types:["std::io::stdio::Stderr"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.StdoutLock.html\" title=\"struct std::io::StdoutLock\">StdoutLock</a>&lt;'a&gt;",synthetic:true,types:["std::io::stdio::StdoutLock"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.StderrLock.html\" title=\"struct std::io::StderrLock\">StderrLock</a>&lt;'a&gt;",synthetic:true,types:["std::io::stdio::StderrLock"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.StdinLock.html\" title=\"struct std::io::StdinLock\">StdinLock</a>&lt;'a&gt;",synthetic:true,types:["std::io::stdio::StdinLock"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'a&gt;",synthetic:true,types:["std::io::IoSliceMut"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'a&gt;",synthetic:true,types:["std::io::IoSlice"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/io/struct.Initializer.html\" title=\"struct std::io::Initializer\">Initializer</a>",synthetic:true,types:["std::io::Initializer"]},{text:"impl&lt;T, U&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Chain.html\" title=\"struct std::io::Chain\">Chain</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::Chain"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Take.html\" title=\"struct std::io::Take\">Take</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::Take"]},{text:"impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Bytes.html\" title=\"struct std::io::Bytes\">Bytes</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::Bytes"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Split.html\" title=\"struct std::io::Split\">Split</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::Split"]},{text:"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"std/io/struct.Lines.html\" title=\"struct std::io::Lines\">Lines</a>&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>",synthetic:true,types:["std::io::Lines"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/io/enum.ErrorKind.html\" title=\"enum std::io::ErrorKind\">ErrorKind</a>",synthetic:true,types:["std::io::error::ErrorKind"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/io/enum.SeekFrom.html\" title=\"enum std::io::SeekFrom\">SeekFrom</a>",synthetic:true,types:["std::io::SeekFrom"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.Ipv4Addr.html\" title=\"struct std::net::Ipv4Addr\">Ipv4Addr</a>",synthetic:true,types:["std::net::ip::Ipv4Addr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.Ipv6Addr.html\" title=\"struct std::net::Ipv6Addr\">Ipv6Addr</a>",synthetic:true,types:["std::net::ip::Ipv6Addr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.SocketAddrV4.html\" title=\"struct std::net::SocketAddrV4\">SocketAddrV4</a>",synthetic:true,types:["std::net::addr::SocketAddrV4"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.SocketAddrV6.html\" title=\"struct std::net::SocketAddrV6\">SocketAddrV6</a>",synthetic:true,types:["std::net::addr::SocketAddrV6"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.TcpStream.html\" title=\"struct std::net::TcpStream\">TcpStream</a>",synthetic:true,types:["std::net::tcp::TcpStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.TcpListener.html\" title=\"struct std::net::TcpListener\">TcpListener</a>",synthetic:true,types:["std::net::tcp::TcpListener"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/net/struct.Incoming.html\" title=\"struct std::net::Incoming\">Incoming</a>&lt;'a&gt;",synthetic:true,types:["std::net::tcp::Incoming"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.UdpSocket.html\" title=\"struct std::net::UdpSocket\">UdpSocket</a>",synthetic:true,types:["std::net::udp::UdpSocket"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/net/struct.AddrParseError.html\" title=\"struct std::net::AddrParseError\">AddrParseError</a>",synthetic:true,types:["std::net::parser::AddrParseError"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/net/enum.IpAddr.html\" title=\"enum std::net::IpAddr\">IpAddr</a>",synthetic:true,types:["std::net::ip::IpAddr"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/net/enum.Ipv6MulticastScope.html\" title=\"enum std::net::Ipv6MulticastScope\">Ipv6MulticastScope</a>",synthetic:true,types:["std::net::ip::Ipv6MulticastScope"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/net/enum.SocketAddr.html\" title=\"enum std::net::SocketAddr\">SocketAddr</a>",synthetic:true,types:["std::net::addr::SocketAddr"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/net/enum.Shutdown.html\" title=\"enum std::net::Shutdown\">Shutdown</a>",synthetic:true,types:["std::net::Shutdown"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/os/unix/net/struct.SocketAddr.html\" title=\"struct std::os::unix::net::SocketAddr\">SocketAddr</a>",synthetic:true,types:["std::sys::unix::ext::net::SocketAddr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/os/unix/net/struct.UnixStream.html\" title=\"struct std::os::unix::net::UnixStream\">UnixStream</a>",synthetic:true,types:["std::sys::unix::ext::net::UnixStream"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/os/unix/net/struct.UnixListener.html\" title=\"struct std::os::unix::net::UnixListener\">UnixListener</a>",synthetic:true,types:["std::sys::unix::ext::net::UnixListener"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/os/unix/net/struct.Incoming.html\" title=\"struct std::os::unix::net::Incoming\">Incoming</a>&lt;'a&gt;",synthetic:true,types:["std::sys::unix::ext::net::Incoming"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/os/unix/net/struct.UnixDatagram.html\" title=\"struct std::os::unix::net::UnixDatagram\">UnixDatagram</a>",synthetic:true,types:["std::sys::unix::ext::net::UnixDatagram"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/os/windows/ffi/struct.EncodeWide.html\" title=\"struct std::os::windows::ffi::EncodeWide\">EncodeWide</a>&lt;'a&gt;",synthetic:true,types:["std::sys_common::wtf8::EncodeWide"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/os/linux/raw/struct.stat.html\" title=\"struct std::os::linux::raw::stat\">stat</a>",synthetic:true,types:["std::os::linux::raw::arch::stat"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/panic/struct.AssertUnwindSafe.html\" title=\"struct std::panic::AssertUnwindSafe\">AssertUnwindSafe</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::panic::AssertUnwindSafe"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/path/struct.PrefixComponent.html\" title=\"struct std::path::PrefixComponent\">PrefixComponent</a>&lt;'a&gt;",synthetic:true,types:["std::path::PrefixComponent"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/path/struct.Components.html\" title=\"struct std::path::Components\">Components</a>&lt;'a&gt;",synthetic:true,types:["std::path::Components"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/path/struct.Iter.html\" title=\"struct std::path::Iter\">Iter</a>&lt;'a&gt;",synthetic:true,types:["std::path::Iter"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/path/struct.Ancestors.html\" title=\"struct std::path::Ancestors\">Ancestors</a>&lt;'a&gt;",synthetic:true,types:["std::path::Ancestors"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>",synthetic:true,types:["std::path::PathBuf"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/path/struct.Path.html\" title=\"struct std::path::Path\">Path</a>",synthetic:true,types:["std::path::Path"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/path/struct.StripPrefixError.html\" title=\"struct std::path::StripPrefixError\">StripPrefixError</a>",synthetic:true,types:["std::path::StripPrefixError"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"std/path/struct.Display.html\" title=\"struct std::path::Display\">Display</a>&lt;'a&gt;",synthetic:true,types:["std::path::Display"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"std/path/enum.Prefix.html\" title=\"enum std::path::Prefix\">Prefix</a>&lt;'a&gt;",synthetic:true,types:["std::path::Prefix"]},{text:"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"std/path/enum.Component.html\" title=\"enum std::path::Component\">Component</a>&lt;'a&gt;",synthetic:true,types:["std::path::Component"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.Child.html\" title=\"struct std::process::Child\">Child</a>",synthetic:true,types:["std::process::Child"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.ChildStdin.html\" title=\"struct std::process::ChildStdin\">ChildStdin</a>",synthetic:true,types:["std::process::ChildStdin"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.ChildStdout.html\" title=\"struct std::process::ChildStdout\">ChildStdout</a>",synthetic:true,types:["std::process::ChildStdout"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.ChildStderr.html\" title=\"struct std::process::ChildStderr\">ChildStderr</a>",synthetic:true,types:["std::process::ChildStderr"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.Command.html\" title=\"struct std::process::Command\">Command</a>",synthetic:true,types:["std::process::Command"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.Output.html\" title=\"struct std::process::Output\">Output</a>",synthetic:true,types:["std::process::Output"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.Stdio.html\" title=\"struct std::process::Stdio\">Stdio</a>",synthetic:true,types:["std::process::Stdio"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.ExitStatus.html\" title=\"struct std::process::ExitStatus\">ExitStatus</a>",synthetic:true,types:["std::process::ExitStatus"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/process/struct.ExitCode.html\" title=\"struct std::process::ExitCode\">ExitCode</a>",synthetic:true,types:["std::process::ExitCode"]},{text:"impl !Freeze for <a class=\"struct\" href=\"std/sync/struct.Barrier.html\" title=\"struct std::sync::Barrier\">Barrier</a>",synthetic:true,types:["std::sync::barrier::Barrier"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/sync/struct.BarrierWaitResult.html\" title=\"struct std::sync::BarrierWaitResult\">BarrierWaitResult</a>",synthetic:true,types:["std::sync::barrier::BarrierWaitResult"]},{text:"impl !Freeze for <a class=\"struct\" href=\"std/sync/struct.Condvar.html\" title=\"struct std::sync::Condvar\">Condvar</a>",synthetic:true,types:["std::sync::condvar::Condvar"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/sync/struct.WaitTimeoutResult.html\" title=\"struct std::sync::WaitTimeoutResult\">WaitTimeoutResult</a>",synthetic:true,types:["std::sync::condvar::WaitTimeoutResult"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"std/sync/struct.Mutex.html\" title=\"struct std::sync::Mutex\">Mutex</a>&lt;T&gt;",synthetic:true,types:["std::sync::mutex::Mutex"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"std/marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"std/sync/struct.MutexGuard.html\" title=\"struct std::sync::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;",synthetic:true,types:["std::sync::mutex::MutexGuard"]},{text:"impl !Freeze for <a class=\"struct\" href=\"std/sync/struct.Once.html\" title=\"struct std::sync::Once\">Once</a>",synthetic:true,types:["std::sync::once::Once"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/sync/struct.OnceState.html\" title=\"struct std::sync::OnceState\">OnceState</a>",synthetic:true,types:["std::sync::once::OnceState"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/sync/struct.PoisonError.html\" title=\"struct std::sync::PoisonError\">PoisonError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::sys_common::poison::PoisonError"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"std/sync/struct.RwLock.html\" title=\"struct std::sync::RwLock\">RwLock</a>&lt;T&gt;",synthetic:true,types:["std::sync::rwlock::RwLock"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"std/marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"std/sync/struct.RwLockReadGuard.html\" title=\"struct std::sync::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;",synthetic:true,types:["std::sync::rwlock::RwLockReadGuard"]},{text:"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"std/marker/trait.Sized.html\" title=\"trait std::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"std/sync/struct.RwLockWriteGuard.html\" title=\"struct std::sync::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;",synthetic:true,types:["std::sync::rwlock::RwLockWriteGuard"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"std/sync/enum.TryLockError.html\" title=\"enum std::sync::TryLockError\">TryLockError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::sys_common::poison::TryLockError"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.Receiver.html\" title=\"struct std::sync::mpsc::Receiver\">Receiver</a>&lt;T&gt;",synthetic:true,types:["std::sync::mpsc::Receiver"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.Iter.html\" title=\"struct std::sync::mpsc::Iter\">Iter</a>&lt;'a, T&gt;",synthetic:true,types:["std::sync::mpsc::Iter"]},{text:"impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.TryIter.html\" title=\"struct std::sync::mpsc::TryIter\">TryIter</a>&lt;'a, T&gt;",synthetic:true,types:["std::sync::mpsc::TryIter"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.IntoIter.html\" title=\"struct std::sync::mpsc::IntoIter\">IntoIter</a>&lt;T&gt;",synthetic:true,types:["std::sync::mpsc::IntoIter"]},{text:"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;T&gt;",synthetic:true,types:["std::sync::mpsc::Sender"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.SyncSender.html\" title=\"struct std::sync::mpsc::SyncSender\">SyncSender</a>&lt;T&gt;",synthetic:true,types:["std::sync::mpsc::SyncSender"]},{text:"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.SendError.html\" title=\"struct std::sync::mpsc::SendError\">SendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::sync::mpsc::SendError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/sync/mpsc/struct.RecvError.html\" title=\"struct std::sync::mpsc::RecvError\">RecvError</a>",synthetic:true,types:["std::sync::mpsc::RecvError"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/sync/mpsc/enum.TryRecvError.html\" title=\"enum std::sync::mpsc::TryRecvError\">TryRecvError</a>",synthetic:true,types:["std::sync::mpsc::TryRecvError"]},{text:"impl Freeze for <a class=\"enum\" href=\"std/sync/mpsc/enum.RecvTimeoutError.html\" title=\"enum std::sync::mpsc::RecvTimeoutError\">RecvTimeoutError</a>",synthetic:true,types:["std::sync::mpsc::RecvTimeoutError"]},{text:"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"std/sync/mpsc/enum.TrySendError.html\" title=\"enum std::sync::mpsc::TrySendError\">TrySendError</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>",synthetic:true,types:["std::sync::mpsc::TrySendError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/time/struct.Instant.html\" title=\"struct std::time::Instant\">Instant</a>",synthetic:true,types:["std::time::Instant"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>",synthetic:true,types:["std::time::SystemTime"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/time/struct.SystemTimeError.html\" title=\"struct std::time::SystemTimeError\">SystemTimeError</a>",synthetic:true,types:["std::time::SystemTimeError"]},{text:"impl Freeze for <a class=\"struct\" href=\"std/alloc/struct.System.html\" title=\"struct std::alloc::System\">System</a>",synthetic:true,types:["std::alloc::System"]},];
implementors["test"] = [{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.Bencher.html\" title=\"struct test::Bencher\">Bencher</a>",synthetic:true,types:["test::Bencher"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.TestDesc.html\" title=\"struct test::TestDesc\">TestDesc</a>",synthetic:true,types:["test::TestDesc"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.TestDescAndFn.html\" title=\"struct test::TestDescAndFn\">TestDescAndFn</a>",synthetic:true,types:["test::TestDescAndFn"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.Metric.html\" title=\"struct test::Metric\">Metric</a>",synthetic:true,types:["test::Metric"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.Options.html\" title=\"struct test::Options\">Options</a>",synthetic:true,types:["test::Options"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.TestOpts.html\" title=\"struct test::TestOpts\">TestOpts</a>",synthetic:true,types:["test::TestOpts"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.BenchSamples.html\" title=\"struct test::BenchSamples\">BenchSamples</a>",synthetic:true,types:["test::BenchSamples"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/struct.MetricMap.html\" title=\"struct test::MetricMap\">MetricMap</a>",synthetic:true,types:["test::MetricMap"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.Concurrent.html\" title=\"enum test::Concurrent\">Concurrent</a>",synthetic:true,types:["test::Concurrent"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.TestName.html\" title=\"enum test::TestName\">TestName</a>",synthetic:true,types:["test::TestName"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.NamePadding.html\" title=\"enum test::NamePadding\">NamePadding</a>",synthetic:true,types:["test::NamePadding"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.TestFn.html\" title=\"enum test::TestFn\">TestFn</a>",synthetic:true,types:["test::TestFn"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.BenchMode.html\" title=\"enum test::BenchMode\">BenchMode</a>",synthetic:true,types:["test::BenchMode"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.ShouldPanic.html\" title=\"enum test::ShouldPanic\">ShouldPanic</a>",synthetic:true,types:["test::ShouldPanic"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.ColorConfig.html\" title=\"enum test::ColorConfig\">ColorConfig</a>",synthetic:true,types:["test::ColorConfig"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.OutputFormat.html\" title=\"enum test::OutputFormat\">OutputFormat</a>",synthetic:true,types:["test::OutputFormat"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.RunIgnored.html\" title=\"enum test::RunIgnored\">RunIgnored</a>",synthetic:true,types:["test::RunIgnored"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.TestResult.html\" title=\"enum test::TestResult\">TestResult</a>",synthetic:true,types:["test::TestResult"]},{text:"impl Freeze for <a class=\"enum\" href=\"test/enum.TestEvent.html\" title=\"enum test::TestEvent\">TestEvent</a>",synthetic:true,types:["test::TestEvent"]},{text:"impl Freeze for <a class=\"struct\" href=\"test/stats/struct.Summary.html\" title=\"struct test::stats::Summary\">Summary</a>",synthetic:true,types:["test::stats::Summary"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()